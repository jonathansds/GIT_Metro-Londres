package com.teste.londres.utils;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;
import org.hibernate.service.ServiceRegistry;
import org.hibernate.service.ServiceRegistryBuilder;

import br.com.caelum.vraptor.ioc.Component;
import br.com.caelum.vraptor.ioc.ComponentFactory;

/**
 * @author Jonathan
 * @version 10/05/2014
 *
 */
@SuppressWarnings("deprecation")
@Component
public class HibernateUtil implements ComponentFactory<Session>{

	private final SessionFactory sessionFactory;
	
	public HibernateUtil(SessionFactory sessionFactory){
		this.sessionFactory = sessionFactory;
	}
	
	private static final ServiceRegistry serviceRegistry;
	private static final Session session;
	
	static {
		try {
			Configuration configuration = new Configuration();
			configuration.configure();
			serviceRegistry = new ServiceRegistryBuilder().applySettings(configuration.getProperties()).build();
			sessionFactory = configuration.buildSessionFactory(serviceRegistry);
			session = sessionFactory.openSession();
		}catch(Throwable ex) {
			System.err.println("Initial SessionFactory creation failed." + ex);
			throw new ExceptionInInitializerError(ex);
		}
	}
	
	@Override
	public Session getInstance() {
		return sessionFactory.openSession();
	}
}
